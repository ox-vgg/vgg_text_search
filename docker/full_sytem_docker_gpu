# Dockerfile for the GPU-only VTS application with Yang Liu's Text-Detect-Recognize. See https://gitlab.com/vgg/vgg_text_search

# For GPU support, start from an nvidia image with CUDA 8 support
FROM nvidia/cuda:8.0-devel-ubuntu16.04

# Update repositories and install all apt-get dependencies, including cuDNN 5.
RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list \
    && apt-get update \
    && apt-get install -y software-properties-common \
    && add-apt-repository -y ppa:deadsnakes/ppa \
    && apt-get update && apt-get install -y \
    python-pip \
    python-dev \
    python3-pip \
    python3.6-dev \
    libz-dev \
    libjpeg-dev \
    libfreetype6-dev \
    openjdk-8-jdk \
    libcudnn5-dev \
    ant \
    unzip \
    wget \
    nano \
    cmake \
    && apt-get install -y --no-install-recommends libboost-all-dev \
    && rm -rf /var/lib/apt/lists/*

# Change the default shell to be able to work with the virtualenv below
SHELL ["/bin/bash", "-c"]

# Create requirements file, install all requirements, download git repo and configure vgg_face_search
RUN pip install --upgrade pip \
    && pip install virtualenv zipp \
    && mkdir /webapps/ \
    && chmod 777 /webapps/ \
    && wget https://gitlab.com/vgg/vgg_text_search/-/archive/master/vgg_text_search-master.zip -O /tmp/vgg_text_search.zip \
    && unzip /tmp/vgg_text_search.zip -d /webapps/ \
    && mv /webapps/vgg_text_search* /webapps/vgg_text_search \
    && sed -i 's/source ..\//source /g' /webapps/vgg_text_search/service/start_backend_service.sh \
    && sed -i 's/source ..\//source /g' /webapps/vgg_text_search/pipeline/start_pipeline.sh \
    && sed -i 's/--gpus -1/--gpus 0/g' /webapps/vgg_text_search/pipeline/start_pipeline.sh \
    && sed -i "s|ffmpeg|/webapps/vgg_text_search/dependencies/ffmpeg/ffmpeg|g" /webapps/vgg_text_search/pipeline/start_pipeline.sh \
    && sed -i 's/localhost/0.0.0.0/g' /webapps/vgg_text_search/service/settings.py \
    && rm -rf /webapps/vgg_text_search/data/images.index/.gitignore \
    && cd /webapps/vgg_text_search \
    && virtualenv -p python3.6 . \
    && source ./bin/activate \
    && pip install Pillow==6.1.0 tensorflow-gpu==1.1.0 setproctitle==1.1.10 matplotlib==3.1.1 opencv-python==4.1.1.26 cython==0.29.14 tqdm==4.37.0 \
    && pip install https://download.pytorch.org/whl/cu90/torch-1.1.0-cp36-cp36m-linux_x86_64.whl \
    && pip install https://download.pytorch.org/whl/cu90/torchvision-0.3.0-cp36-cp36m-manylinux1_x86_64.whl \
    && pip install scipy==1.1.0 imgaug==0.3.0 tensorboardx==1.9 editdistance==0.5.3 simplejson==3.8.2 Flask==0.10.1 \
    && wget https://archive.apache.org/dist/lucene/pylucene/pylucene-8.1.1-src.tar.gz -P /tmp \
    && cd /tmp && tar -xvzf pylucene-8.1.1-src.tar.gz \
    && cd /tmp/pylucene-8.1.1/jcc/ && sed -i 's|java-8-oracle|java-8-openjdk-amd64|g' setup.py \
    && python setup.py build && python setup.py install \
    && cd /tmp/pylucene-8.1.1 \
    && sed -i 's|# Linux     (Debian Jessie 64-bit, Python 3.4.2|\nPREFIX_PYTHON=/webapps/vgg_text_search\nANT=JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 /usr/bin/ant\nPYTHON=$(PREFIX_PYTHON)/bin/python3\nJCC=$(PYTHON) -m jcc --shared\nNUM_FILES=10\n#|g' Makefile \
    && make &&  make install \
    && rm -rf /tmp/*.zip && rm -rf /tmp/*.tar* && rm -rf /tmp/pylucene-8.1.1/

# Install Yang Liu's Text-Detect-Recognize and download static ffmpeg
RUN wget https://github.com/ox-vgg/Text-Detect-Recognize/archive/master.zip -O /tmp/text-detect-master.zip \
    && unzip /tmp/text-detect-master.zip -d /webapps/vgg_text_search/dependencies \
    && mv /webapps/vgg_text_search/dependencies/Text-Detect-Recognize* /webapps/vgg_text_search/dependencies/Text-Detect-Recognize \
    && rm -rf /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/detection/pixel_link/pylib \
    && wget https://github.com/dengdan/pylib/archive/python3.zip -O /tmp/pylib.zip \
    && unzip /tmp/pylib.zip -d /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/detection/pixel_link/ \
    && mv /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/detection/pixel_link/pylib* /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/detection/pixel_link/pylib \
    && wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz -O /tmp/ffmpeg-release-amd64-static.tar.xz \
    && tar -xf /tmp/ffmpeg-release-amd64-static.tar.xz -C /webapps/vgg_text_search/dependencies/ \
    && mv /webapps/vgg_text_search/dependencies/ffmpeg* /webapps/vgg_text_search/dependencies/ffmpeg \
    && rm -rf /tmp/*.zip && rm -rf /tmp/*.tar*

# Compile shot detector
RUN cd /webapps/vgg_text_search/pipeline \
    && mkdir build \
    && cd build \
    && cmake -DBoost_INCLUDE_DIR=/usr/include/ ../ \
    && make

# Download models from https://drive.google.com/drive/folders/1PuLCYVG457UOFzWHz4GuerTzWABZR0b6
# The contents of pixel_link_vgg_4s.zip should be mounted to:
#    /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/detection/pixel_link/model
# The 0_480000.pth file should be mounted to:
#    /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/recognition/attention_net/model

# The customizations below can be done via the command line and are not needed here.
# If you need them create a new Docker image derived from this one and define them.
#EXPOSE 55366
#VOLUME /webapps/vgg_text_search/data/images.index \
#       /webapps/vgg_text_search/data/text_detections \
#       /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/detection/pixel_link/model \
#       /webapps/vgg_text_search/dependencies/Text-Detect-Recognize/recognition/attention_net/model
#ENTRYPOINT /webapps/vgg_face_search/service/start_backend_service.sh
